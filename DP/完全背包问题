/*
【完全背包】
有N种物品和一个容量为V的背包，每种物品都有无限件可用。
第i种物品的体积是w[i]，价值是v[i]。
将哪些物品装入背包可使这些物品的体积总和不超过背包容量，且价值总和最大。

状态转移方程：f[v] = max(f[v],f[v-w[i]]+v[i])
*/

//空间优化后的代码：
for(i=0;i<=V;++i) f[i] = 0;

    for(i=0;i<N;++i)
        for(j=w[i];j<=V;++j)
            f[j] = max(f[j],f[j-w[i]]+v [i]);
cout << f[V];   //最大价值
