/*
【01背包】
有N件物品和一个容量为V的背包。
第i件物品的重量是w[i]，价值是v[i]。
求解将哪些物品装入背包可使这些物品的重量总和不超过背包容量，且价值总和最大。

这是最基础的背包问题，特点是：每种物品仅有一件，可以选择放或不放。

状态转移方程：f[v] = max{f[v],f[v-w[i]]+v[i]}
*/

//空间优化后的代码：
for(i=0;i<=V;++i)  f[i] = 0;

    for(i=0;i<N;++i)
        for(j=V;j>=w[i];--j)
            f[j] = max(f[j],f[j-w[i]]+v[i]);
cout << f[V];   //最大价值
